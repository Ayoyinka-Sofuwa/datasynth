{"dataset": {"outputs": [{"generated_input": "\nSingh, Arjun", "normalized_output": {"name": "Singh, Arjun", "normalized": [{"title": null, "given": "Arjun", "middle": null, "surname": "Singh", "suffix": null}]}}, {"generated_input": "Salvador, Maria Lourdes", "normalized_output": {"name": "Salvador, Maria Lourdes", "normalized": [{"title": null, "given": "Maria", "middle": "Lourdes", "surname": "Salvador", "suffix": null}]}}], "generator_prompt": "Generate a list of names separated by double newlines. \n\nMake them as realistic and diverse as possible.\n\nInclude following types of variety:\n- middle names\n- \"Last, First\" format\n- married couples\n- names of non U.S. origin\n- compound surnames\n- titles (e.g. Dr, Mr)\n- suffixes (e.g. Jr, Sr, Esq)\n\n{{few_shot}}\nDo not reuse the examples above.\n\nList:\n", "normalizer_prompt": "Format the following names as a list of python dictionaries of the form:\n[\n    { \n        \"title\": str | None, # e.g. \"Mr.\", \"Ms.\", \"Dr.\"\n        \"given\": str, \n        \"middle\": str | None, \n        \"surname\": str, \n        \"suffix\": str | None # e.g. \"Jr.\", \"III\", \"Sr.\", \"PhD\", \"Esq\"\n    }\n]. \n\nBe sure to handle compound surnames.\n\nInput:\n\"{{name}}\"\n\nOutput:\n[{"}}